# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.3.0/charts/other/app-template/values.schema.json

## This chart relies on the common library chart from bjw-s-labs
## You can find it at https://github.com/bjw-s-labs/helm-charts/tree/main/charts/library/common
## Refer there for more detail about the supported values

# Internal image configuration - managed by the chart
# Users should not override this unless they know what they're doing
image:
  repository: ghcr.io/immich-app/immich-server
  tag: v2.1.0

immich:
  # configuration is immich-config.json converted to yaml
  # ref: https://immich.app/docs/install/config-file/
  # This configuration is applied to the immich-config.yaml file
  # and mounted to both server and machine-learning containers
  #
  # Set to {} (empty) to use Immich's internal defaults (default, recommended for GitOps).
  # Set to null to manage configuration via the Immich web GUI.
  # Set specific values to override defaults with declarative configuration (for GitOps).
  # Empty {} is merged with Immich's internal defaults.
  configuration: {}
  # Example chart-managed configuration:
  # configuration:
  #   trash:
  #     enabled: false
  #     days: 30
  #   storageTemplate:
  #     enabled: true
  #     template: "{{y}}/{{y}}-{{MM}}-{{dd}}/{{filename}}"

  # Monitoring configuration
  # Enable to expose Prometheus metrics endpoints and create ServiceMonitor
  monitoring:
    enabled: false

  # Database configuration
  # If not specified, defaults to the included postgresql instance
  database:
    {}
    # host: "postgres.example.com"
    # port: 5432
    # username: "immich"
    # name: "immich"
    # password: "password"
    #
    # To use a secret for the password:
    # password:
    #   valueFrom:
    #     secretKeyRef:
    #       name: immich-db-secret
    #       key: password

  # Redis configuration
  # If not specified, defaults to the included redis instance
  redis:
    {}
    # host: "redis.example.com"
    # port: 6379

  # Machine Learning configuration
  machineLearning:
    # Enable or disable the ML service
    # Set to false to disable ML features (face detection, object recognition, etc.)
    enabled: true

# Persistence configuration
persistence:
  library:
    type: persistentVolumeClaim
    # existingClaim: "name-of-existing-claim"
    storageClass: null
    accessMode: ReadWriteMany
    size: 10Gi
    advancedMounts:
      server:
        main:
          - path: /data
  external:
    type: persistentVolumeClaim
    # existingClaim: "name-of-existing-claim"
    storageClass: null
    accessMode: ReadWriteMany
    size: 10Gi
    advancedMounts:
      server:
        main:
          - path: /usr/src/app/external
  machine-learning-cache:
    enabled: true # Automatically disabled when immich.machineLearning.enabled is false
    type: persistentVolumeClaim
    # Optional: Set type to emptyDir to stop caching between pod restarts
    # type: emptyDir
    # existingClaim: "name-of-existing-claim"
    storageClass: null
    accessMode: ReadWriteMany
    size: 10Gi
    advancedMounts:
      machine-learning:
        main:
          - path: /cache

# Ingress configuration
ingress:
  server:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
    hosts:
      - host: immich.local
        paths:
          - path: '/'
    tls: []

# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.2/charts/other/app-template/values.schema.json

# These entries are shared between all the Immich components

# TODO provide top level configs for things like persistence, using included DB, using included redis, DB settings (such as HDD vs SSD mode)
# Also validate them in the checks.yaml

image:
  repository: ghcr.io/immich-app/immich-server
  tag: v1.135.3

immich:
  metrics:
    enabled: true
  # TODO move to be managed in common values
  # configuration is immich-config.json converted to yaml
  # ref: https://immich.app/docs/install/config-file/
  configuration: {}
  # trash:
  #   enabled: false
  #   days: 30
  # storageTemplate:
  #   enabled: true
  # template: "{{y}}/{{y}}-{{MM}}-{{dd}}/{{filename}}"

controllers:
  server:
    enabled: true
    containers:
      main:
        persistence:
          library:
            mountPath: /usr/src/app/upload
            # existingClaim: ''

  machine-learning:
    enabled: true
    containers:
      main: {}
        # resources:
        #   limits:
        #     nvidia.com/gpu.shared: '1'

# persistence:
#   server:
#     identifier: server
#     advancedMounts:
#       - type: configMap
#         name: "{{ .Release.Name }}-immich-config"
#       - name: immich-library
#         path: /usr/src/app/upload
#         accessMode: ReadWriteMany
#         size: 1Ti
#         storageClass: # provide your storage class
#         # existingClaim: immich-library Provide your existing PVC
#       - path: /usr/src/app/external
#         name: immich-external
#         accessMode: ReadWriteMany
#         size: 1Ti
#         storageClass: # provide your storage class
#         # existingClaim: immich-external Provide your existing PVC
#   machine-learning:
#     identifier: machine-learning
#     advancedMounts:
#       - name: cache
#         mountPath: /cache
#         size: 10Gi
#         # Optional: Set this to pvc to avoid downloading the ML models every start.
#         type: emptyDir
#         accessMode: ReadWriteMany
#         storageClass: # provide your storage class

ingress:
  main:
    enabled: true
    annotations:
      # proxy-body-size is set to 0 to remove the body limit on file uploads
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    hosts:
      - host: immich.local
        paths:
          - path: "/"
            service:
              identifier: server
    tls: []

# Dependencies

postgresql:
  enabled: false
  image:
    registry: ghcr.io
    repository: immich-app/postgres
    tag: 14-vectorchord0.3.0-pgvectors0.3.0
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        password: immich
    security:
      allowInsecureImages: true
  primary:
    extraEnvVars:
      - name: DB_STORAGE_TYPE
        value: "HDD" # TODO this should be configurable on top level somewhere
      - name: POSTGRES_DB
        value: immich
    customLivenessProbe:
      tcpSocket:
        port: tcp-postgresql
    customReadinessProbe:
      tcpSocket:
        port: tcp-postgresql
    customStartupProbe:
      tcpSocket:
        port: tcp-postgresql
      failureThreshold: 256
    persistence:
      enabled: false
      accessMode: ReadWriteOnce
      size: 100Gi
      storageClass: # provide your storage class
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
    containerSecurityContext:
      readOnlyRootFilesystem: false

redis:
  enabled: false
  architecture: standalone
  master:
    persistence:
      enabled: false
  auth:
    enabled: false
